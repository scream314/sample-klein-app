[tox]

envlist =
    flake8
    py3{5,6}-trial-{coverage,nocoverage}
    py3{5,6}-wheel
    coverage_combined


skip_missing_interpreters = True



##
# Build
##

[testenv]

basepython =
    py35: python3.5
    py36: python3.6


deps =
    flake8: flake8

    trial: -r{toxinidir}/requirements.txt

    {trial,coverage}: mock

    coverage: coverage
    coverage_combined: coverage

    codecov_publish: codecov

    wheel: wheel


whitelist_externals =
    cp
    ls


passenv =
    PATH
    LANG
    PYTHON_*
    CI CONTINUOUS_INTEGRATION TRAVIS TRAVIS_*
    _system_*
    CODECOV_OPTIONS


setenv =
    PIP_DISABLE_PIP_VERSION_CHECK=1
    VIRTUAL_ENV_DISABLE_PROMPT=true
    GIT_ASKPASS=echo

    coverage: COVERAGE_FILE={toxinidir}/.tox/log/coverage.{envname}
    {coverage_combined,codecov_publish}: COVERAGE_FILE={toxinidir}/.tox/log/coverage

    {coverage,coverage_combined}: COVERAGE_HTML={envlogdir}/coverage_report_html
    {coverage,coverage_combined,codecov_publish}: COVERAGE_XML={envlogdir}/coverage_report.xml

    coverage: COVERAGE_PROCESS_START={toxinidir}/.coveragerc


commands =
    {toxinidir}/bin/environment

    # Run trial without coverage
    nocoverage: trial --logfile="{envlogdir}/trial.log" --temp-directory="{envlogdir}/trial.d" {posargs:sample_klein_app}


    # Copy this PTH file to site-packages in coverage test environments so that coverage runs
    # See: http://coverage.readthedocs.io/en/coverage-4.2/subprocess.html?highlight=COVERAGE_PROCESS_START#measuring-sub-processes
    coverage: python -c 'with open("{envsitepackagesdir}/zz_coverage.pth", "w") as f: f.write("import coverage\ncoverage.process_startup()\n")'
    coverage: coverage run --rcfile="{toxinidir}/.coveragerc" -m twisted.trial --logfile="{envlogdir}/trial.log" --temp-directory="{envlogdir}/trial.d" {posargs:sample_klein_app}

    {coverage_combined,codecov_publish}: coverage combine --append

    # Copy aside coverage data for each test environment in case we want to look at it later
    {coverage,coverage_combined}: cp "{env:COVERAGE_FILE}" "{envlogdir}/coverage"

    # Run coverage reports, ignore exit status
    {coverage,coverage_combined}: - coverage html --rcfile="{toxinidir}/.coveragerc" -d "{env:COVERAGE_HTML}"
    {coverage,coverage_combined}: - coverage xml --rcfile="{toxinidir}/.coveragerc" -o "{env:COVERAGE_XML}"
    coverage: - coverage report --rcfile="{toxinidir}/.coveragerc"

    # Don't ignore exit status for text report in coverage_combined; this is our failure status if coverage is insufficient.
    coverage_combined: coverage report --rcfile="{toxinidir}/.coveragerc"

    # Publish to codecov.io
    codecov_publish: coverage xml --rcfile="{toxinidir}/.coveragerc" -o "{env:COVERAGE_XML}"
    codecov_publish: codecov --required --file="{env:COVERAGE_XML}" {env:CODECOV_OPTIONS:}


    # Build wheel
    wheel: python setup.py bdist_wheel --dist-dir="{toxworkdir}/dist"



##
# Flake8 linting
##

[testenv:flake8]

basepython = python3.5

skip_install = True

commands =
    {toxinidir}/bin/environment

    # Pyflakes
    flake8 {posargs:src/sample_klein_app}


[flake8]

# Codes: http://flake8.pycqa.org/en/latest/user/error-codes.html
ignore =

disable-noqa = True

show-source = True

doctests = True
