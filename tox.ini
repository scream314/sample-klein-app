[tox]

envlist =
    pyflakes
    py{35,36}-trial-{coverage,nocoverage}
    py{35,36}-wheel
    coverage_combined


skip_missing_interpreters = True



[testenv]

deps =
    pyflakes: pyflakes

    {trial,coverage}: mock

    coverage: coverage
    coverage_combined: coverage

    wheel: wheel


whitelist_externals =
    cp
    env
    pwd


setenv =
    coverage: COVERAGE_FILE={toxinidir}/.tox/log/coverage.{envname}
    coverage_combined: COVERAGE_FILE={toxinidir}/.tox/log/coverage

    coverage: COVERAGE_PROCESS_START={toxinidir}/.coveragerc


commands =
    pwd
    python --version
    env


    ; Pyflakes
    pyflakes: pyflakes {posargs:src/sample_klein_app}


    ; Run trial without coverage
    nocoverage: trial --logfile="{envlogdir}/trial.log" --temp-directory="{envlogdir}/trial.d" {posargs:sample_klein_app}


    ; Copy this PTH file to site-packages in coverage test environments so that coverage runs
    ; See: http://coverage.readthedocs.io/en/coverage-4.2/subprocess.html?highlight=COVERAGE_PROCESS_START#measuring-sub-processes
    coverage: python -c 'with open("{envsitepackagesdir}/zz_coverage.pth", "w") as f: f.write("import coverage\ncoverage.process_startup()\n")'
    coverage: coverage run --rcfile="{toxinidir}/.coveragerc" -m twisted.trial --logfile="{envlogdir}/trial.log" --temp-directory="{envlogdir}/trial.d" {posargs:sample_klein_app}

    coverage_combined: coverage combine --append

    ; Copy aside coverage data for each test environment in case we want to look at it later
    {coverage,coverage_combined}: cp "{env:COVERAGE_FILE}" "{envlogdir}/coverage"

    ; Run coverage reports, ignore exit status
    {coverage,coverage_combined}: - coverage html --rcfile="{toxinidir}/.coveragerc" -d "{envlogdir}/coverage_report_html"
    {coverage,coverage_combined}: - coverage xml --rcfile="{toxinidir}/.coveragerc" -o "{envlogdir}/coverage_report_xml"
    {coverage}: - coverage report --rcfile="{toxinidir}/.coveragerc"

    ; Don't ignore exit status for text report in coverage_combined; this is our failure status if coverage is insufficient.
    {coverage_combined}: coverage report --rcfile="{toxinidir}/.coveragerc"


    ; Build wheel
    wheel: python setup.py bdist_wheel --dist-dir="{toxworkdir}/dist"



[testenv:pyflakes]

basepython = python3.5
