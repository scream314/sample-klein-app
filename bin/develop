#!/bin/sh
# -*- sh-basic-offset: 2 -*-

set -e;
set -u;


##
# Variables
##

if [ -z "${wd:-}" ]; then
  wd="$(cd "$(dirname "$0")/.." && pwd -P)";
fi;

cd "${wd}";

command_name="$(basename "$0")";

if [ "${wd/ /}" == "${wd}" ]; then
  venv_root="${wd}/build";
else
  # ${wd} contains a space.
  #
  # Don't use ${wd} because the executable path in the shebang line inserted
  # into scripts put into the virtual environment will also contain a space,
  # and sadness ensues.
  #
  # We'll use ${TMPDIR} and generate a subdirectory name unique to this
  # project.
  #
  wdidfile="${wd}/.wdid~";
  if [ ! -f "${wdidfile}" ]; then
    uuidgen > "${wdidfile}";
  fi;
  wdid="$(cat "${wdidfile}")";

  venv_root="${TMPDIR%/}/${wdid}";
  rm -fr "${wd}/build";
  ln -s "${venv_root}" "${wd}/build";
fi;

venv_bin="${venv_root}/bin";

python="${venv_bin}/python";


##
# Functions for locating the right python command
##

resolve_cmd () {
  local cmd="$1"; shift;

  local path="$(type "${cmd}" 2>/dev/null | sed "s|^${cmd} is \(a tracked alias for \)\{0,1\}||")";

  if [ -z "${path}" ]; then
    return 1;
  fi;

  echo "${path}";
}

py_version () {
  local python="$1"; shift;
  local   attr="$1"; shift;

  "${python}" -c 'from sys import version_info as version; print(version.'"${attr}"');'
}

find_python () {
  local python;
  local python_path;

  for python in "${PYTHON:=}" "python3" "python"; do
    if python_path="$(resolve_cmd "${python}")"; then
       if [ "$(py_version "${python_path}" "major")" -eq "3" ]; then    # major version == 3
         if [ "$(py_version "${python_path}" "minor")" -ge "5" ]; then  # minor version >= 5
           echo "${python_path}";
           return $?;
         fi;
       fi;
    fi;
  done;

  return 1;
}


##
# Virtual environment
##

venv_init () {
  if ! bootstrap_python="$(find_python)"; then
    echo "No suitable python found.";
    exit 78;  # EX_CONFIG
  fi;

  echo "Using ${bootstrap_python} as python.";

  echo "Virtual environment: ${venv_root}";

  echo "Creating virtual environment...";
  "${bootstrap_python}" -m virtualenv "${venv_root}";

  echo "Installing pip...";
  "${python}" -m pip install --upgrade pip;

  echo "Installing Tox...";
  "${python}" -m pip install --upgrade tox;

  echo "Installing mock...";
  "${python}" -m pip install --upgrade mock;

  echo "Installing Hypothesis...";
  "${python}" -m pip install --upgrade hypothesis;
}

venv_install_requirements () {
  echo "Installing required packages...";
  "${python}" -m pip install --requirement "${wd}/requirements.txt";
}


##
# Do The Right Thing
##

develop () {
  venv_init;
  venv_install_requirements;
}

develop_if_needed () {
  if [ ! -e "${python}" ]; then
    develop;
  fi;
}

if [ "${command_name}" == "develop" ]; then
  develop;
else
  develop_if_needed;
  venv_command="${venv_bin}/${command_name}";
fi;
